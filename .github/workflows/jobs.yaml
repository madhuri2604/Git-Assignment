# name: Job output pass
# env:
#   RESOURCE_NAME: "gcs"
#   REGION:  "usc1"
#   TERRAFORM_VERSION: "1.8.5"   
#   PROJECT_ID: "prj-gcp-inframod-01" 
# on:
#   push:
#     branches: [main]

# jobs:
#   auth-jb:
#     runs-on: ubuntu-latest

#     outputs:
#       credentials_json_b64: ${{ steps.encode-creds.outputs.credentials_json_b64 }}

#     permissions:
#       contents: read
#       id-token: write

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Authenticate to GCP via WIF
#         id: auth 
#         uses: google-github-actions/auth@v2
#         with:
#           create_credentials_file : true
#           workload_identity_provider: 'projects/349782046408/locations/global/workloadIdentityPools/github-demo-pool/providers/github-identity-provider'
#           service_account: 'sa-workload-identity-fed@prj-gcp-inframod-01.iam.gserviceaccount.com' 

#       - name: Base64 encode the credentials file
#         id: encode-creds
#         run: |
#           echo "credentials_json_b64=$(base64 ${{ steps.auth.outputs.credentials_file_path }} | tr -d '\n')" >> $GITHUB_OUTPUT

#   terraform-jb:
#     needs: auth-jb
#     runs-on: ubuntu-latest
#     env:
#       GOOGLE_APPLICATION_CREDENTIALS: $HOME/adc.json
#       TF_VAR_project_id: "prj-gcp-inframod-01"

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Decode credentials and set env
#         run: |
#           echo "${{ needs.auth-jb.outputs.credentials_json_b64 }}" | base64 -d > "$HOME/adc.json"
#           echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/adc.json" >> $GITHUB_ENV

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version:  ${{env.TERRAFORM_VERSION}}

#       - name: Terraform Init
#         run: |
#           terraform init -backend-config=${{ github.workspace }}/Modules/${RESOURCE_NAME}/config/backend/${REGION}/backend.auto.tfvars
#         working-directory: Modules/${{ env.RESOURCE_NAME }}/config

#       - name: Terraform Plan
#         run: |
#           terraform plan -var-file=${{ github.workspace }}/Modules/${RESOURCE_NAME}/${REGION}/terraform.tfvars -out=tfplan
#         working-directory: Modules/${{ env.RESOURCE_NAME }}/config

#       - name: Terraform Apply
#         run: terraform apply -auto-approve tfplan
#         working-directory: Modules/${{ env.RESOURCE_NAME }}/config
